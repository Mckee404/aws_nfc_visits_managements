{
 "Resources": {
  "EventDataTable8B81539D": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "partitionKey",
      "AttributeType": "S"
     },
     {
      "AttributeName": "sortKey",
      "AttributeType": "S"
     },
     {
      "AttributeName": "GSI_1_PK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "GSI_1_SK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "GSI_2_PK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "GSI_2_SK",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "GSI1-GenericQueries",
      "KeySchema": [
       {
        "AttributeName": "GSI_1_PK",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "GSI_1_SK",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     },
     {
      "IndexName": "VisitRecordsByDateAndTimestamp",
      "KeySchema": [
       {
        "AttributeName": "GSI_2_PK",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "GSI_2_SK",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "partitionKey",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "sortKey",
      "KeyType": "RANGE"
     }
    ],
    "TableName": "EventData",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Development"
     },
     {
      "Key": "Project",
      "Value": "NFCVisitManagement"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "IoTCoreStack/EventDataTable/Resource"
   }
  },
  "NFCIoTPolicy": {
   "Type": "AWS::IoT::Policy",
   "Properties": {
    "PolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Effect": "Allow",
       "Action": [
        "iot:Connect"
       ],
       "Resource": [
        "arn:aws:iot:ap-northeast-1:514760581321:client/nfc-reader-*"
       ]
      },
      {
       "Effect": "Allow",
       "Action": [
        "iot:Publish"
       ],
       "Resource": [
        "arn:aws:iot:ap-northeast-1:514760581321:topic/nfc/visits/*"
       ]
      },
      {
       "Effect": "Allow",
       "Action": [
        "iot:Subscribe"
       ],
       "Resource": [
        "arn:aws:iot:ap-northeast-1:514760581321:topicfilter/nfc/commands/*"
       ]
      },
      {
       "Effect": "Allow",
       "Action": [
        "iot:Receive"
       ],
       "Resource": [
        "arn:aws:iot:ap-northeast-1:514760581321:topic/nfc/commands/*"
       ]
      }
     ]
    },
    "PolicyName": "NFCDevicePolicy",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Development"
     },
     {
      "Key": "Project",
      "Value": "NFCVisitManagement"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "IoTCoreStack/NFCIoTPolicy"
   }
  },
  "CertHandlerLambdaServiceRoleA08797B0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Development"
     },
     {
      "Key": "Project",
      "Value": "NFCVisitManagement"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "IoTCoreStack/CertHandlerLambda/ServiceRole/Resource"
   }
  },
  "CertHandlerLambdaServiceRoleDefaultPolicy6AFE3F98": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "iot:AttachPolicy",
        "iot:AttachThingPrincipal",
        "iot:CreateKeysAndCertificate",
        "iot:CreatePolicy",
        "iot:DescribeCertificate",
        "iot:ListPolicies",
        "iot:ListThings",
        "iot:UpdateCertificate"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CertHandlerLambdaServiceRoleDefaultPolicy6AFE3F98",
    "Roles": [
     {
      "Ref": "CertHandlerLambdaServiceRoleA08797B0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "IoTCoreStack/CertHandlerLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CertHandlerLambdaC1626125": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "514760581321.dkr.ecr.ap-northeast-1.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-514760581321-ap-northeast-1:3b02f9a2613eb27ee55862ecbe5ea7a7fa1acca1f1b259185dba016135ae2a31"
     }
    },
    "MemorySize": 256,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "CertHandlerLambdaServiceRoleA08797B0",
      "Arn"
     ]
    },
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Development"
     },
     {
      "Key": "Project",
      "Value": "NFCVisitManagement"
     }
    ],
    "Timeout": 30
   },
   "DependsOn": [
    "CertHandlerLambdaServiceRoleDefaultPolicy6AFE3F98",
    "CertHandlerLambdaServiceRoleA08797B0"
   ],
   "Metadata": {
    "aws:cdk:path": "IoTCoreStack/CertHandlerLambda/Resource",
    "aws:asset:path": "asset.3b02f9a2613eb27ee55862ecbe5ea7a7fa1acca1f1b259185dba016135ae2a31",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "CertCustomResourceProviderframeworkonEventServiceRoleD598489B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Development"
     },
     {
      "Key": "Project",
      "Value": "NFCVisitManagement"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "IoTCoreStack/CertCustomResourceProvider/framework-onEvent/ServiceRole/Resource"
   }
  },
  "CertCustomResourceProviderframeworkonEventServiceRoleDefaultPolicy535D66D6": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "CertHandlerLambdaC1626125",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "CertHandlerLambdaC1626125",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "lambda:GetFunction",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CertHandlerLambdaC1626125",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CertCustomResourceProviderframeworkonEventServiceRoleDefaultPolicy535D66D6",
    "Roles": [
     {
      "Ref": "CertCustomResourceProviderframeworkonEventServiceRoleD598489B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "IoTCoreStack/CertCustomResourceProvider/framework-onEvent/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CertCustomResourceProviderframeworkonEvent683F20D8": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-514760581321-ap-northeast-1",
     "S3Key": "bdc104ed9cab1b5b6421713c8155f0b753380595356f710400609664d3635eca.zip"
    },
    "Description": "AWS CDK resource provider framework - onEvent (IoTCoreStack/CertCustomResourceProvider)",
    "Environment": {
     "Variables": {
      "USER_ON_EVENT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "CertHandlerLambdaC1626125",
        "Arn"
       ]
      }
     }
    },
    "Handler": "framework.onEvent",
    "Role": {
     "Fn::GetAtt": [
      "CertCustomResourceProviderframeworkonEventServiceRoleD598489B",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Development"
     },
     {
      "Key": "Project",
      "Value": "NFCVisitManagement"
     }
    ],
    "Timeout": 900
   },
   "DependsOn": [
    "CertCustomResourceProviderframeworkonEventServiceRoleDefaultPolicy535D66D6",
    "CertCustomResourceProviderframeworkonEventServiceRoleD598489B"
   ],
   "Metadata": {
    "aws:cdk:path": "IoTCoreStack/CertCustomResourceProvider/framework-onEvent/Resource",
    "aws:asset:path": "asset.bdc104ed9cab1b5b6421713c8155f0b753380595356f710400609664d3635eca",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "NFCThingbooth1": {
   "Type": "AWS::IoT::Thing",
   "Properties": {
    "AttributePayload": {
     "Attributes": {
      "boothId": "booth-1"
     }
    },
    "ThingName": "booth-1"
   },
   "Metadata": {
    "aws:cdk:path": "IoTCoreStack/NFCThing-booth-1"
   }
  },
  "CustomCertResourcebooth1": {
   "Type": "AWS::CloudFormation::CustomResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CertCustomResourceProviderframeworkonEvent683F20D8",
      "Arn"
     ]
    },
    "DeviceId": "booth-1"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "IoTCoreStack/CustomCertResource-booth-1/Default"
   }
  },
  "PolicyAttachmentbooth1": {
   "Type": "AWS::IoT::PolicyPrincipalAttachment",
   "Properties": {
    "PolicyName": "NFCDevicePolicy",
    "Principal": {
     "Fn::GetAtt": [
      "CustomCertResourcebooth1",
      "CertificateArn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "IoTCoreStack/PolicyAttachment-booth-1"
   }
  },
  "ThingAttachmentbooth1": {
   "Type": "AWS::IoT::ThingPrincipalAttachment",
   "Properties": {
    "Principal": {
     "Fn::GetAtt": [
      "CustomCertResourcebooth1",
      "CertificateArn"
     ]
    },
    "ThingName": "booth-1"
   },
   "Metadata": {
    "aws:cdk:path": "IoTCoreStack/ThingAttachment-booth-1"
   }
  },
  "NFCThingbooth2": {
   "Type": "AWS::IoT::Thing",
   "Properties": {
    "AttributePayload": {
     "Attributes": {
      "boothId": "booth-2"
     }
    },
    "ThingName": "booth-2"
   },
   "Metadata": {
    "aws:cdk:path": "IoTCoreStack/NFCThing-booth-2"
   }
  },
  "CustomCertResourcebooth2": {
   "Type": "AWS::CloudFormation::CustomResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CertCustomResourceProviderframeworkonEvent683F20D8",
      "Arn"
     ]
    },
    "DeviceId": "booth-2"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "IoTCoreStack/CustomCertResource-booth-2/Default"
   }
  },
  "PolicyAttachmentbooth2": {
   "Type": "AWS::IoT::PolicyPrincipalAttachment",
   "Properties": {
    "PolicyName": "NFCDevicePolicy",
    "Principal": {
     "Fn::GetAtt": [
      "CustomCertResourcebooth2",
      "CertificateArn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "IoTCoreStack/PolicyAttachment-booth-2"
   }
  },
  "ThingAttachmentbooth2": {
   "Type": "AWS::IoT::ThingPrincipalAttachment",
   "Properties": {
    "Principal": {
     "Fn::GetAtt": [
      "CustomCertResourcebooth2",
      "CertificateArn"
     ]
    },
    "ThingName": "booth-2"
   },
   "Metadata": {
    "aws:cdk:path": "IoTCoreStack/ThingAttachment-booth-2"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/91UXW/TMBT9LfPj5JnR8dS3bpRpYkBJygOqqsqx71qvjm/kj44Q5b8jO0lbQQFNmnjgIYp9zsn1yfWxR2x0OWKXZ/zJXQi5vdCqYE3uudhS/uRWjawNL1EWrJnzQsOiIT6+P/ISyJicE0oqbr3yCs17qMm4IeZA+bqKw5y0lDi0/s+KQmmtzPoDygjNJl9Xs2m2yqafv0zzOaHEQok7rmeolajJmEhw3mJNWtoQLuWtxoLrHAQayW19ZyR8I+NFQ1QcPd9wZfERRNTNO3Ryf0/a5T9ebUlvHkxqfUsVetbcPJiuA4nYKLOme2hmlRGq4nriPRebEozfq05wLdW8LCRnzVsUW7B3JV/Du2CSjUVDRLcTyaoqAYPvZyWUaOtcfR9oMDtl0cSiPcKt2CgPwgfbiWLfXrZgas1gl572LcEJq6pI9IgNJq7dzzbcSA32pCmN61uLoeqnu0ocRnkoDHjXAw5EsMrXST6AFvWwykPv7SgWRz84NcLWB4t9wKbHHVikb87JMuZP8ZI1GabDyJ0LJcjrFK1qv8VCYDh0LmniBxNxtAopueFrkCk6ClxK7zFWT2yvHUI/x32KhlO4aHo2perOaGVgzyXHfyX/g1/4fd0U0micdnDayaHcHLMUkp9W+RWWMvfcQwyDGwy/WKHT8PJwrbQUhF1x58A7dnRVTCISOZZBhU55tPU1d7BYUnc16DuRu2LXQWzBd3xLM3AYrIAh2SndNIlzz9fxWhPBeSxXtlc6NrO4UxIsvUnMqRLPebqt6YvE8afgq+BbalACe3SvdqMRe/2GXZ49OqUu+ouDZd37BxiB6kQ5BwAA"
   },
   "Metadata": {
    "aws:cdk:path": "IoTCoreStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "CustomCertArnbooth1": {
   "Description": "Custom Resource Certificate ARN for booth-1",
   "Value": {
    "Fn::GetAtt": [
     "CustomCertResourcebooth1",
     "CertificateArn"
    ]
   }
  },
  "CustomCertArnbooth2": {
   "Description": "Custom Resource Certificate ARN for booth-2",
   "Value": {
    "Fn::GetAtt": [
     "CustomCertResourcebooth2",
     "CertificateArn"
    ]
   }
  },
  "IoTThingNamebooth1": {
   "Description": "IoT Thing Name for NFC Reader booth-1",
   "Value": "booth-1"
  },
  "IoTThingNamebooth2": {
   "Description": "IoT Thing Name for NFC Reader booth-2",
   "Value": "booth-2"
  },
  "IoTPolicyName": {
   "Description": "IoT Policy Name",
   "Value": "NFCDevicePolicy"
  },
  "DynamoDBTableName": {
   "Description": "DynamoDB Table Name",
   "Value": {
    "Ref": "EventDataTable8B81539D"
   }
  },
  "IoTEndpoint": {
   "Description": "IoT Core Endpoint",
   "Value": "https://514760581321.iot.ap-northeast-1.amazonaws.com"
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}